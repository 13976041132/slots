syntax = "proto3";

package GPBClass.Message;

import "PB_SlotsResultSteps.proto";
import "PB_SlotsElement.proto";
import "PB_MessageBase64List.proto";

message PB_SlotsBetting_Req {
    int64 totalBet = 1; //下注额
    int32 winType = 2; //指定中奖类型(测试专用)
    string sampleGroup = 3; //指定样本组(测试专用)
    string feature = 4; //指定中feature，逗号分隔(测试专用)
    bool clear = 5; //是否清除当前feature(测试专用)
    bool hit = 6; //是否必中奖(测试专用)
    string options = 7; //其他命令选项(机器人专用)
	bool isAdReady = 8; //广告是否已就绪
	string sampleLibId = 9; //样本库触发器Id
}

message PB_SlotsBetting_Res {
    int64 cost = 1; //本次花费金币
    int64 totalBet = 2; //本次下注额
    int64 resumeBet = 3; //待恢复的下注额
    bool isFreeSpin = 4; //是否是freespin
    bool isLastFreeSpin = 5; //是否是最后一次freespin
    int32 spinTimes = 6; //第几次spin(对freespin有效)
    string feature = 7; //当前feature
    repeated PB_SlotsResultSteps resultSteps = 8; //中奖结果(可能有多步)
    repeated PB_SlotsElement stickyElements = 9; //上次spin后遗留的sticky元素(如果可能发生移动，则是移动后的位置)
    repeated int32 nextMsgIds = 10 [packed=true]; //本次spin附加消息列表
    int64 winCoins = 11; //本次中奖赢得数额
    int64 totalWin = 12; //当前TotalWin
    int32 winType = 13; //本次中奖类型(BIG WIN | MEGA WIN...)
    int32 totalWinType = 14; //TotalWin中奖类型(BIG WIN | MEGA WIN...)
    int64 balance = 15; //金币余额(最新值)
    bool settled = 16; //是否结算
    repeated PB_MessageBase64List nextMessages = 17; // 附加消息
}